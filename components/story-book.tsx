"use client"

import { useState } from "react"
import { ChevronLeft, ChevronRight, BookOpen } from "lucide-react"

const storyPages = [
  {
    title: "KH·ªûI NGUY√äN",
    content: `Ng√†n v·∫°n nƒÉm tr∆∞·ªõc, gi·ªØa Tam Gi·ªõi (Ti√™n ‚Äì Nh√¢n ‚Äì Ma) t·ªìn t·∫°i m·ªôt vi√™n b·∫£o th·∫°ch huy·ªÅn b√≠ t√™n l√† Thi√™n T√¢m Th·∫°ch.

N√≥ ƒë∆∞·ª£c sinh ra t·ª´ gi·ªçt l·ªá cu·ªëi c√πng c·ªßa Th·∫ßn N·ªØ T·∫°o Th·∫ø, ·∫©n ch·ª©a s·ª©c m·∫°nh dung h√≤a sinh t·ª≠, xoay chuy·ªÉn c√†n kh√¥n.

Thi√™n T√¢m Th·∫°ch kh√¥ng thu·ªôc v·ªÅ b·∫•t k·ª≥ gi·ªõi n√†o. Khi n√≥ t·ªèa s√°ng, chi·∫øn tranh d·ª´ng l·∫°i, v·∫°n v·∫≠t sinh s√¥i. Nh∆∞ng khi n√≥ b·ªã t·ªïn th∆∞∆°ng, c·∫£ Tam Gi·ªõi r∆°i v√†o h·ªón lo·∫°n.`,
    image: "/placeholder.svg?height=400&width=300",
  },
  {
    title: "BI·∫æN C·ªê",
    content: `M·ªôt ƒë√™m Huy·∫øt Nguy·ªát, Ma T√¥n H·∫Øc Thi√™n ph√° phong ·∫•n, x√© to·∫°c b·∫ßu tr·ªùi, c∆∞·ªõp ƒëi Thi√™n T√¢m Th·∫°ch. S·ª©c m·∫°nh b·ªã ƒë√°nh th·ª©c khi·∫øn linh kh√≠ tr√†n ng·∫≠p, y√™u ma qu·ª∑ qu√°i th·ª©c gi·∫•c, c·ªï th√∫ h·ªìi sinh.

Trong tr·∫≠n chi·∫øn, Thi√™n T√¢m Th·∫°ch v·ª° th√†nh 7 m·∫£nh, bay kh·∫Øp Tam Gi·ªõi:

‚Ä¢ Nh√¢n Gian: n∆°i ph√†m nh√¢n sinh s·ªëng
‚Ä¢ Y√™u V·ª±c: r·ª´ng s√¢u, n√∫i th·∫≥m  
‚Ä¢ Ti√™n Gi·ªõi: l·∫ßu c√°c ng·ªçc b√≠ch
‚Ä¢ Ma Gi·ªõi: v·ª±c s√¢u tƒÉm t·ªëi`,
    image: "/placeholder.svg?height=400&width=300",
  },
  {
    title: "NG∆Ø·ªúI ƒê∆Ø·ª¢C CH·ªåN",
    content: `B·∫°n v√†o vai m·ªôt k·∫ª v√¥ danh sinh ra ·ªü Nh√¢n Gian, ch·ªâ mong s·ªëng b√¨nh y√™n.

M·ªôt ng√†y, khi ƒëi sƒÉn th√∫ ·ªü Thung L≈©ng S∆∞∆°ng M√π, b·∫°n v√¥ t√¨nh c·ª©u m·ªôt ti·ªÉu h·ªì ly b·ªã th∆∞∆°ng. Kh√¥ng ng·ªù n√≥ l√† h√≥a th√¢n c·ªßa m·ªôt m·∫£nh Thi√™n T√¢m Th·∫°ch.

T·ª´ gi√¢y ph√∫t ƒë√≥, b·∫°n b·ªã cu·ªën v√†o d√≤ng xo√°y c·ªßa s·ªë m·ªánh ‚Äî n∆°i m·ªói b∆∞·ªõc ƒëi, m·ªói ƒë·ªìng minh, m·ªói k·∫ª th√π ƒë·ªÅu c√≥ th·ªÉ thay ƒë·ªïi t∆∞∆°ng lai c·ªßa Tam Gi·ªõi.`,
    image: "/placeholder.svg?height=400&width=300",
  },
  {
    title: "H√ÄNH TR√åNH",
    content: `ƒê·ªÉ thu th·∫≠p ƒë·ªß 7 m·∫£nh Thi√™n T√¢m Th·∫°ch, b·∫°n ph·∫£i:

üó°Ô∏è T·∫ßm s∆∞ h·ªçc ƒë·∫°o ‚Äì b√°i nh·∫≠p m√¥n ph√°i, h·ªçc tuy·ªát k·ªπ v√µ c√¥ng ho·∫∑c ti√™n ph√°p.

üåç Du h√†nh Tam Gi·ªõi ‚Äì v∆∞·ª£t qua nh·ªØng v√πng ƒë·∫•t huy·ªÅn tho·∫°i, m·ªói n∆°i m·ªôt c√¢u chuy·ªán ri√™ng.

‚öîÔ∏è PK sinh t·ª≠ ‚Äì ƒë·ªëi ƒë·∫ßu ng∆∞·ªùi ch∆°i kh√°c ƒë·ªÉ tranh t√†i, c∆∞·ªõp m·∫£nh b·∫£o th·∫°ch.

üëπ Quy·∫øt chi·∫øn Ma T√¥n ‚Äì tr·∫≠n cu·ªëi ƒë·ªãnh ƒëo·∫°t v·∫≠n m·ªánh Tam Gi·ªõi.`,
    image: "/placeholder.svg?height=400&width=300",
  },
  {
    title: "K·∫æT TH√öC M·ªû",
    content: `Khi thu th·∫≠p ƒë·ªß 7 m·∫£nh Thi√™n T√¢m Th·∫°ch, b·∫°n c√≥ quy·ªÅn l·ª±a ch·ªçn:

üïäÔ∏è Tr·∫£ l·∫°i cho Tam Gi·ªõi ‚Üí h√≤a b√¨nh ƒë∆∞·ª£c l·∫≠p l·∫°i, nh∆∞ng s·ª©c m·∫°nh bi·∫øn m·∫•t m√£i m√£i.

üëë Gi·ªØ cho ri√™ng m√¨nh ‚Üí b·∫°n tr·ªü th√†nh k·∫ª m·∫°nh nh·∫•t, nh∆∞ng b·ªã to√†n Tam Gi·ªõi truy s√°t.

üí• Ph√° h·ªßy ho√†n to√†n ‚Üí c·∫Øt ƒë·ª©t v√≤ng l·∫∑p chi·∫øn tranh, nh∆∞ng Tam Gi·ªõi r∆°i v√†o th·ªùi k·ª≥ linh kh√≠ c·∫°n ki·ªát.

T·ª´ ƒë√¢y, game m·ªü ra nhi·ªÅu b·∫£n m·ªü r·ªông v·ªõi tuy·∫øn c·ªët truy·ªán kh√°c nhau.`,
    image: "/placeholder.svg?height=400&width=300",
  },
]

export default function StoryBook() {
  const [currentPage, setCurrentPage] = useState(0)
  const [isFlipping, setIsFlipping] = useState(false)

  const nextPage = () => {
    if (currentPage < storyPages.length - 1 && !isFlipping) {
      setIsFlipping(true)
      setTimeout(() => {
        setCurrentPage(currentPage + 1)
        setIsFlipping(false)
      }, 300)
    }
  }

  const prevPage = () => {
    if (currentPage > 0 && !isFlipping) {
      setIsFlipping(true)
      setTimeout(() => {
        setCurrentPage(currentPage - 1)
        setIsFlipping(false)
      }, 300)
    }
  }

  return (
    <div className="max-w-6xl mx-auto px-4 py-16">
      <div className="text-center mb-12">
        <div className="flex items-center justify-center gap-3 mb-4">
          <BookOpen className="w-8 h-8 text-jade-400" />
          <h2 className="text-4xl font-bold bg-gradient-to-r from-jade-400 to-gold-400 bg-clip-text text-transparent">
            C·ªët Truy·ªán
          </h2>
        </div>
        <p className="text-gold-300 text-lg">Kh√°m ph√° c√¢u chuy·ªán huy·ªÅn tho·∫°i c·ªßa Ti√™n Duy√™n K·ª≥ Hi·ªáp</p>
      </div>

      {/* Book Container */}
      <div className="relative mx-auto" style={{ perspective: "1000px" }}>
        <div
          className="relative w-full max-w-4xl mx-auto bg-gradient-to-br from-amber-100 to-amber-50 rounded-lg shadow-2xl overflow-hidden"
          style={{
            height: "600px",
            transform: "rotateX(5deg)",
            boxShadow: "0 20px 40px rgba(0,0,0,0.3), inset 0 0 20px rgba(139,69,19,0.1)",
          }}
        >
          {/* Book Spine */}
          <div className="absolute left-0 top-0 bottom-0 w-8 bg-gradient-to-b from-amber-800 to-amber-900 shadow-inner"></div>

          {/* Page Content */}
          <div
            className={`absolute inset-0 ml-8 transition-all duration-300 ${isFlipping ? "transform rotateY-180" : ""}`}
          >
            <div className="h-full flex">
              {/* Left Page */}
              <div className="w-1/2 p-8 border-r border-amber-200">
                <div className="h-full flex flex-col">
                  <div className="mb-6">
                    <img
                      src={storyPages[currentPage].image || "/placeholder.svg"}
                      alt={storyPages[currentPage].title}
                      className="w-full h-64 object-cover rounded-lg shadow-lg border-4 border-amber-200"
                    />
                  </div>
                  <div className="text-center">
                    <h3 className="text-2xl font-bold text-amber-800 mb-2 font-serif">
                      {storyPages[currentPage].title}
                    </h3>
                    <div className="w-16 h-1 bg-gradient-to-r from-jade-400 to-gold-400 mx-auto"></div>
                  </div>
                </div>
              </div>

              {/* Right Page */}
              <div className="w-1/2 p-8">
                <div className="h-full flex flex-col justify-center">
                  <div className="prose prose-amber max-w-none">
                    <div className="text-amber-900 leading-relaxed text-base font-serif whitespace-pre-line">
                      {storyPages[currentPage].content}
                    </div>
                  </div>

                  {/* Page Number */}
                  <div className="mt-auto text-center">
                    <span className="text-amber-600 text-sm font-serif">
                      {currentPage + 1} / {storyPages.length}
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Page Flip Effect Overlay */}
          {isFlipping && (
            <div className="absolute inset-0 ml-8 bg-gradient-to-r from-transparent via-white/50 to-transparent animate-pulse"></div>
          )}
        </div>

        {/* Navigation Buttons */}
        <button
          onClick={prevPage}
          disabled={currentPage === 0 || isFlipping}
          className="absolute left-4 top-1/2 -translate-y-1/2 w-12 h-12 bg-amber-800 hover:bg-amber-700 disabled:bg-amber-400 disabled:cursor-not-allowed rounded-full flex items-center justify-center shadow-lg transition-all duration-200 hover:scale-110"
        >
          <ChevronLeft className="w-6 h-6 text-white" />
        </button>

        <button
          onClick={nextPage}
          disabled={currentPage === storyPages.length - 1 || isFlipping}
          className="absolute right-4 top-1/2 -translate-y-1/2 w-12 h-12 bg-amber-800 hover:bg-amber-700 disabled:bg-amber-400 disabled:cursor-not-allowed rounded-full flex items-center justify-center shadow-lg transition-all duration-200 hover:scale-110"
        >
          <ChevronRight className="w-6 h-6 text-white" />
        </button>
      </div>

      {/* Page Indicators */}
      <div className="flex justify-center mt-8 gap-2">
        {storyPages.map((_, index) => (
          <button
            key={index}
            onClick={() => {
              if (!isFlipping) {
                setIsFlipping(true)
                setTimeout(() => {
                  setCurrentPage(index)
                  setIsFlipping(false)
                }, 300)
              }
            }}
            className={`w-3 h-3 rounded-full transition-all duration-200 ${
              index === currentPage ? "bg-jade-400 scale-125" : "bg-amber-300 hover:bg-amber-400"
            }`}
          />
        ))}
      </div>
    </div>
  )
}
